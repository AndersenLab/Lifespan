geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = factor(block)), width = .25) +
facet_wrap(trait ~ term, scales = "free") +
labs(title = "FIGURE 7: Ricker fit parameter estimates", y="parameter estimate", x = "", color = "block") +
theme_classic() +
theme(legend.position = "right")
ricker
new_df <- df_proc %>%
tidyr::gather(trait, phenotype, -block, -strain, -rep, -time_d) %>%
dplyr::filter(trait %in% c("base", "stim")) %>%
dplyr::group_by(block, strain, trait) %>%
dplyr::do(tidy(nlsLM(phenotype ~ a*time_d*exp(1)^(b*time_d),
data = ., start = list(a=100,b=0.2), control = nls.lm.control(maxiter = 200)))) %>%
dplyr::ungroup() %>%
dplyr::group_by(trait, term) %>%
dplyr::mutate(f_estimate = remove_outliers(estimate))
ricker <- ggplot(new_df) +
aes(x = strain, y = f_estimate) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = factor(block)), width = .25) +
facet_wrap(trait ~ term, scales = "free") +
labs(title = "FIGURE 8: Ricker fit parameter estimates (outliers removed)", y="parameter estimate", x = "", color = "block") +
theme_classic() +
theme(legend.position = "right")
ricker
herit_plot_corr <- ggplot(new_h) +
aes(x = parameter, y = H2) +
ylab("Corrected Heritability") +
scale_x_discrete(labels= c("base_a", "base_b", "stim_a", "stim_b")) +
ylim(0, .5) +
geom_point() +
labs(title = "FIGURE 10: Heritability of residual ricker fit parameter estimates") +
geom_hline(yintercept = .20, linetype="dashed", color="darkred")
herit_plot_corr
new_h <- new_df %>%
dplyr::do(tidy(H2.test(.))) %>%
dplyr::rename(H2 = x) %>%
tidyr::unite(parameter, trait, term)
herit_plot_corr <- ggplot(new_h) +
aes(x = parameter, y = H2) +
ylab("Corrected Heritability") +
scale_x_discrete(labels= c("base_a", "base_b", "stim_a", "stim_b")) +
ylim(0, .5) +
geom_point() +
labs(title = "FIGURE 10: Heritability of residual ricker fit parameter estimates") +
geom_hline(yintercept = .20, linetype="dashed", color="darkred")
herit_plot_corr
new_df <- df_proc %>%
tidyr::gather(trait, phenotype, -block, -strain, -rep, -time_d) %>%
dplyr::filter(trait %in% c("base", "stim")) %>%
dplyr::group_by(block, strain, trait) %>%
dplyr::do(tidy(nlsLM(phenotype ~ a*time_d*exp(1)^(b*time_d),
data = ., start = list(a=100,b=0.2), control = nls.lm.control(maxiter = 200)))) %>% # Fit Ricker function to base activity and stim activity for each strain within each block
dplyr::ungroup() %>%
dplyr::group_by(trait, term) %>%
dplyr::mutate(phenotype = remove_outliers(estimate)) %>% #identify and remove outliers
dplyr::ungroup() %>%
dplyr::filter(complete.cases(.)) %>% # remove outlier rows from data frame
dplyr::group_by(trait, term) %>%
dplyr::mutate(phenotype = residuals(lm(estimate ~ block)))  # regress out block effect
ricker <- ggplot(new_df) +
aes(x = strain, y = phenotype) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = factor(block)), width = .25) +
facet_wrap(trait ~ term, scales = "free") +
labs(title = "FIGURE 9: Risidual ricker fit parameter estimates (outliers removed)", y="residual parameter estimate", x = "", color = "block") +
theme_classic() +
theme(legend.position = "right")
ricker
new_h <- new_df %>%
dplyr::do(tidy(H2.test(.))) %>%
dplyr::rename(H2 = x) %>%
tidyr::unite(parameter, trait, term)
herit_plot_corr <- ggplot(new_h) +
aes(x = parameter, y = H2) +
ylab("Corrected Heritability") +
scale_x_discrete(labels= c("base_a", "base_b", "stim_a", "stim_b")) +
ylim(0, .5) +
geom_point() +
labs(title = "FIGURE 10: Heritability of residual ricker fit parameter estimates") +
geom_hline(yintercept = .20, linetype="dashed", color="darkred")
herit_plot_corr
new_df <- df %>%
dplyr::distinct(bio_rep, time_d) %>%
dplyr::group_by(time_d) %>%
dplyr::summarise(n = n()) %>%
dplyr::arrange(-n)
df_15 <- df_proc %>%
dplyr::filter(time_d == 15) %>%
dplyr::group_by(block) %>%
dplyr::distinct(block, strain, rep, .keep_all = T)
df_15_gather <- df_15 %>%
dplyr::ungroup() %>%
dplyr::select(-time_d) %>%
tidyr::gather(trait, phenotype, life_span, base, stim, abstim)
day15_plots <- ggplot(df_15_gather) +
aes(x = strain, y = phenotype) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(size = .25, width = .25, aes(colour = factor(block))) +
labs(title = "FIGURE 11: Raw day 15 activity levels", x="strain", y="activity levels", colour = "block") +
theme(legend.position = "right") +
facet_grid(trait ~ ., scales = "free") +
theme_classic()
day15_plots
df_15_gather_f <- df_15_gather %>%
dplyr::group_by(strain, trait) %>%
dplyr::mutate(f_pheno = remove_outliers(phenotype)) %>%
dplyr::ungroup() %>%
dplyr::filter(complete.cases(.))
day15_f_plots <- ggplot(df_15_gather_f) +
aes(x = strain, y = f_pheno) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(size = .25, width = .25, aes(colour = factor(block))) +
labs(title = "FIGURE 12: Day 15 activity levels (outliers removed)",x="strain", y="activity levels", colour = "block") +
theme(legend.position = "right") +
facet_grid(trait ~ ., scales = "free") +
theme_classic()
day15_f_plots
h_list_raw <- list()
for(t in 1:length(unique(df_15_gather$trait))){
trait_df_raw <- df_15_gather_f %>%
dplyr::select(-block) %>%
dplyr::ungroup() %>%
dplyr::filter(complete.cases(.)) %>%
dplyr::filter(trait == (unique(df_15_gather$trait)[t])) %>%
dplyr::mutate(H2 = H2.test(.))
h_list_raw[[t]] <- trait_df_raw
}
df_15_raw<- dplyr::bind_rows(h_list_raw) %>%
dplyr::arrange(strain)
herit_df_15_raw <- ggplot(df_15_raw%>%distinct(trait, .keep_all=T)) +
aes(x = trait, y = H2) +
ylab("Heritability") +
scale_x_discrete(labels= c("stim - base", "base", "life_span", "stim")) +
ylim(0, .5) +
labs(title = "FIGURE 13: Heritability for day 15 activity traits (outliers removed)") +
geom_point() +
geom_hline(yintercept = .20, linetype="dashed", color="darkred")
herit_df_15_raw
knitr::opts_chunk$set(echo = TRUE)
try(setwd(dirname(rstudioapi::getActiveDocumentContext()$path)))
library(tidyverse)
library(forcats)
library(broom)
df1 <- as.data.frame(read.csv(file = "WI_24WellPlate_40mMParaquat_LongFormat_Plate1.csv", header = T))
df1 <- df1 %>%
dplyr::mutate(assay = 1)
df2 <- as.data.frame(read.csv(file = "WI_24WellPlate_40mMParaquat_LongFormat_Plate2.csv", header = T))
df2 <- df2 %>%
dplyr::mutate(assay = 2)
df <- dplyr::bind_rows(df1, df2) %>%
dplyr::rename(strain = Genotype, well = Well.Number, hour = Time..Hours.,
surv_time = Aggregate.Lifespan.Activity.Score, activity = Activity)
glimpse(df)
fig1 <- ggplot(df %>% dplyr::distinct(strain, well, assay, .keep_all = T)) +
aes(x = strain, y = surv_time) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = .25, aes(color = as.factor(assay))) +
theme_classic() +
theme(title = element_text(size = 12, color = "black", face = "bold"),
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 12, color = "black"),
legend.text = element_text(size = 12, color = "black")) +
labs(title = "Fig. 1 Survival time (Heritbility = 0.114)", color = "Assay", x = "Strain", y = "Survival Time (h)") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
theme(legend.position="right")
fig1
H2.test <- function(data){
pheno <- as.data.frame(dplyr::select(data, phenotype))[,1]
strain <- as.factor(data$strain)
reffMod <- lme4::lmer(pheno ~ 1 + (1|strain))
Variances <- as.data.frame(lme4::VarCorr(reffMod, comp = "Variance"))
Vg <- Variances$vcov[1]
Ve <- Variances$vcov[2]
H2 <- Vg/(Vg+Ve)
return(H2)
}
df_h <- df %>%
dplyr::distinct(strain, well, assay, .keep_all = T) %>%
dplyr::rename(phenotype = surv_time) %>%
dplyr::do(broom::tidy(H2.test(.))) %>%
dplyr::rename(H2 = x)
survival_heritability <- df_h$H2
df_h2 <- df %>%
dplyr::distinct(strain, well, assay, .keep_all = T) %>%
dplyr::rename(phenotype = surv_time) %>%
dplyr::mutate(phenotype = residuals(lm(phenotype ~ assay))) %>% # regress out block effect
dplyr::do(broom::tidy(H2.test(.))) %>% # calculate heritability
dplyr::rename(H2 = x)
survival_heritability2 <- df_h2$H2
fig2 <- ggplot(df_h2 <- df %>%
dplyr::distinct(strain, well, assay, .keep_all = T) %>%
dplyr::rename(phenotype = surv_time) %>%
dplyr::mutate(phenotype = residuals(lm(phenotype ~ assay)))) +
aes(x = strain, y = phenotype) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = .25, aes(color = as.factor(assay))) +
theme_classic() +
theme(title = element_text(size = 12, color = "black", face = "bold"),
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 12, color = "black"),
legend.text = element_text(size = 12, color = "black")) +
labs(title = "Fig. 2 Assay regressed survival time (Heritability = 0.269)", color = "Assay", x = "Strain", y = "Residual survival time (h)") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
theme(legend.position="right")
fig2
all <- ggplot(df) +
aes(x = hour, y = activity, color = strain) +
geom_point(alpha = 0.2) +
#geom_smooth(size = 0.5, color = "black") +
facet_grid(~strain) +
theme_classic() +
theme(title = element_text(size = 12, color = "black", face = "bold"),
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 12, color = "black"),
legend.text = element_text(size = 12, color = "black")) +
labs(title = "Fig. 3 Raw activity", color = "Strain", x = "Hour", y = "Raw Activity") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
theme(legend.position="none")
all
new_df <- df %>%
dplyr::filter(!is.na(activity), hour < 50) %>%
dplyr::group_by(strain, assay, well) %>%
dplyr::mutate(rep = ifelse(assay == 1 & well == 1, 1,
ifelse(assay == 1 & well == 2, 2,
ifelse(assay == 2 & well == 1, 3,
ifelse(assay == 2 & well == 2, 4, NA))))) %>%
dplyr::mutate(tot_act = sum(activity)) %>%
dplyr::mutate(cumsum = cumsum(activity)) %>%
dplyr::mutate(act_remain = 1 - (cumsum/tot_act)) %>%
dplyr::mutate(window = case_when(
hour <= 1 ~ "h0_1",
hour <= 2 ~ "h1_2",
hour <= 3 ~ "h2_3",
hour <= 4 ~ "h3_4",
hour <= 5 ~ "h4_5",
hour <= 10 & hour > 5 ~ "h5_10",
hour <= 15 & hour > 10 ~ "h10_15",
hour <= 20 & hour > 15 ~ "h15_20",
hour <= 25 & hour > 20 ~ "h20_25",
hour <= 30 & hour > 25 ~ "h25_30",
hour <= 35 & hour > 30 ~ "h30_35",
hour <= 40 & hour > 35 ~ "h35_40",
hour <= 45 & hour > 40 ~ "h40_45",
hour <= 50 & hour > 45 ~ "h45_50")) %>%
dplyr::mutate(window = factor(window, levels = c("h0_1", "h1_2",
"h2_3", "h3_4",
"h4_5", "h5_10",
"h10_15", "h15_20",
"h20_25","h25_30",
"h30_35", "h35_40",
"h40_45", "h45_50"))) %>%
dplyr::group_by(strain, rep, window) %>%
dplyr::mutate(auc = sum(activity))
windows1 <- ggplot(new_df %>%
dplyr::distinct(window, .keep_all = T) %>%
dplyr::rename(phenotype = auc)) +
aes(x = window, y = phenotype, color = as.factor(rep)) +
geom_boxplot() +
geom_point() +
facet_grid(~strain)
df_h_windows <- new_df %>%
dplyr::distinct(window, .keep_all = T) %>%
dplyr::rename(phenotype = auc) %>%
dplyr::ungroup() %>%
dplyr::group_by(window) %>%
#dplyr::mutate(phenotype = residuals(lm(phenotype ~ assay))) %>% # regress out block effect
dplyr::do(broom::tidy(H2.test(.))) %>% # calculate heritability
dplyr::rename(H2 = x)
window_h <- ggplot(df_h_windows) +
aes(x = window, y = H2) +
geom_point() +
geom_hline(yintercept = 0.2, linetype = "dashed", color = "red" ) +
theme_classic() +
theme(title = element_text(size = 12, color = "black", face = "bold"),
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 12, color = "black"),
legend.text = element_text(size = 12, color = "black")) +
labs(title = "Fig. 4 Heritability for integrated activity levels in time windows", x = "Assay time window", y = "Heritability") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
theme(legend.position="none")
window_h
window_dot <- ggplot(new_df %>%
dplyr::filter(window == "h2_3")) +
aes(x = hour, y = activity, color = strain) +
geom_point(alpha = 0.25) +
theme_classic() +
facet_grid(~strain) +
theme(title = element_text(size = 12, color = "black", face = "bold"),
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 12, color = "black"),
legend.text = element_text(size = 12, color = "black")) +
labs(title = "Fig. 5 Raw activity levels from 2-3 hours", x = "Time", y = "Activity") +
theme(axis.text.x = element_text(size = 0)) +
theme(legend.position="none")
window_dot
window_box <- ggplot(new_df %>%
dplyr::filter(window == "h2_3") %>%
dplyr::distinct(strain, rep, .keep_all = T)) +
aes(x = strain, y = auc) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = .25, aes(color = as.factor(assay))) +
theme_classic() +
theme(title = element_text(size = 12, color = "black", face = "bold"),
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 12, color = "black"),
legend.text = element_text(size = 12, color = "black")) +
labs(title = "Fig. 6 Integrated activity levels from 2-3 hours", x = "", y = "Integrated activity", color = "Assay") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
theme(legend.position="right")
window_box
df_h_windows_corr <- new_df %>%
dplyr::distinct(window, .keep_all = T) %>%
dplyr::rename(phenotype = auc) %>%
dplyr::ungroup() %>%
dplyr::group_by(window) %>%
dplyr::mutate(phenotype = residuals(lm(phenotype ~ assay))) %>% # regress out block effect
dplyr::do(broom::tidy(H2.test(.))) %>% # calculate heritability
dplyr::rename(H2 = x)
window_box_corr <- ggplot(new_df %>%
dplyr::filter(window == "h2_3") %>%
dplyr::mutate(phenotype = residuals(lm(auc ~ assay))) %>%
dplyr::distinct(strain, rep, .keep_all = T)) +
aes(x = strain, y = phenotype) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = .25, aes(color = as.factor(assay))) +
theme_classic() +
theme(title = element_text(size = 12, color = "black", face = "bold"),
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 12, color = "black"),
legend.text = element_text(size = 12, color = "black")) +
labs(title = "Fig. 7 Assay regressed Integrated activity levels from 2-3 hours", x = "", y = "Residual integrated activity", color = "Assay") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
theme(legend.position="right")
window_h_corr <- ggplot(df_h_windows_corr) +
aes(x = window, y = H2) +
geom_point() +
geom_hline(yintercept = 0.2, linetype = "dashed", color = "red" ) +
theme_classic() +
theme(title = element_text(size = 12, color = "black", face = "bold"),
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 12, color = "black"),
legend.text = element_text(size = 12, color = "black")) +
labs(title = "Fig. 8 Heritability for assay corrected integrated activity levels in time windows", x = "Assay time window", y = "Corrected heritability") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
theme(legend.position="none")
window_box_corr_3_4 <- ggplot(new_df %>%
dplyr::filter(window == "h3_4") %>%
dplyr::mutate(phenotype = residuals(lm(auc ~ assay))) %>%
dplyr::distinct(strain, rep, .keep_all = T)) +
aes(x = strain, y = phenotype) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = .25, aes(color = as.factor(assay))) +
theme_classic() +
theme(title = element_text(size = 12, color = "black", face = "bold"),
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 12, color = "black"),
legend.text = element_text(size = 12, color = "black")) +
labs(title = "Fig. 9 Assay regressed Integrated activity levels from 3-4 hours", x = "", y = "Residual integrated activity", color = "Assay") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
theme(legend.position="right")
window_h_corr
glimpse(window_dot)
glimpse(new_df)
window_dot <- ggplot(new_df %>%
dplyr::filter(window == "h2_3")) +
aes(x = hour, y = activity, color = assay) +
geom_point(alpha = 0.05) +
theme_classic() +
facet_grid(~strain) +
theme(title = element_text(size = 12, color = "black", face = "bold"),
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 12, color = "black"),
legend.text = element_text(size = 12, color = "black")) +
labs(title = "Fig. 5 Raw activity levels from 2-3 hours", x = "Time", y = "Activity", color = "assay") +
theme(axis.text.x = element_text(size = 0)) +
theme(legend.position="none")
window_dot
window_dot <- ggplot(new_df %>%
dplyr::filter(window == "h2_3")) +
aes(x = hour, y = activity, color = assay) +
geom_point(alpha = 0.05) +
theme_classic() +
facet_grid(~strain) +
theme(title = element_text(size = 12, color = "black", face = "bold"),
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 12, color = "black"),
legend.text = element_text(size = 12, color = "black")) +
labs(title = "Fig. 5 Raw activity levels from 2-3 hours", x = "Time", y = "Activity", color = "assay") +
theme(axis.text.x = element_text(size = 0)) +
theme(legend.position="right")
window_dot
window_dot <- ggplot(new_df %>%
dplyr::filter(window == "h2_3")) +
aes(x = hour, y = activity, color = as.factor(assay)) +
geom_point(alpha = 0.05) +
theme_classic() +
facet_grid(~strain) +
theme(title = element_text(size = 12, color = "black", face = "bold"),
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 12, color = "black"),
legend.text = element_text(size = 12, color = "black")) +
labs(title = "Fig. 5 Raw activity levels from 2-3 hours", x = "Time", y = "Activity", color = "assay") +
theme(axis.text.x = element_text(size = 0)) +
theme(legend.position="right")
window_dot
window_dot <- ggplot(new_df %>%
dplyr::filter(window == "h2_3")) +
aes(x = hour, y = activity, color = as.factor(assay)) +
geom_point(alpha = 0.15) +
theme_classic() +
facet_grid(~strain) +
theme(title = element_text(size = 12, color = "black", face = "bold"),
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 12, color = "black"),
legend.text = element_text(size = 12, color = "black")) +
labs(title = "Fig. 5 Raw activity levels from 2-3 hours", x = "Time", y = "Activity", color = "assay") +
theme(axis.text.x = element_text(size = 0)) +
theme(legend.position="right")
window_dot
w_scale_lm <- lme4::lmer(phenotype ~ 1 + (1|strain) + (1|block), data = h_df_gather%>%dplyr::filter(trait == "w_scale_est"))
summary(w_scale_lm)
library(rio)
library(ggplot2)
library(dplyr)
library(survival)
library(flexsurv)
try(setwd(dirname(rstudioapi::getActiveDocumentContext()$path)))
df <- as.data.frame(read.csv(file = "20170116_FullProcessed.csv", header = T))
glimpse(df)
df_proc1 <- df %>%
dplyr::filter(activity_type != "base", !is.na(life_span)) %>%
dplyr::mutate(alive = ifelse(!is.na(activity), 1, 0)) %>%
dplyr::group_by(strain, tech_rep, bio_rep, time_d) %>%
dplyr::summarise(frac_alive = sum(alive)/n(),
n = n())
raw_plot_all <- ggplot(df_proc1) +
aes(x=time_d, y=frac_alive, color=strain) +
geom_line() +
labs(x="Day", y="Fraction alive") +
theme(legend.position = "right") +
theme_grey() +
facet_grid(bio_rep ~ tech_rep, labeller = label_both)
raw_plot_subset <- ggplot(df_proc1 %>% dplyr::filter(grepl("N2", strain) | grepl("CB4856", strain))) +
aes(x=time_d, y=frac_alive, color=strain) +
geom_line() +
labs(x="Day", y="Fraction alive") +
theme(legend.position = "right") +
theme_grey() +
facet_grid(bio_rep ~ tech_rep, labeller = label_both)
raw_plot_all
df_km <- df %>%
dplyr::distinct(strain, bio_rep, rep, life_span) %>%
dplyr::mutate(status = ifelse(is.na(life_span), 0, 1)) %>%
dplyr::mutate(bio_rep = factor(bio_rep))
weibull_50 <- function(shape, scale) {
qweibull(0.5, shape = shape, scale = scale)
}
weibull_10 <- function(shape, scale) {
qweibull(0.9, shape = shape, scale = scale)
}
weibull_90 <- function(shape, scale) {
qweibull(0.1, shape = shape, scale = scale)
}
block_list <- list()
strain_list <- list()
for(b in 1:length(unique(df_km$bio_rep))){
block_df <- df_km %>%
dplyr::filter(bio_rep == (unique(df_km$bio_rep)[b]))
for(s in 1:length(unique(block_df$strain))){
strain_df <- block_df %>%
dplyr::filter(strain == (unique(block_df$strain)[s]))
w_fit = flexsurvreg(Surv(life_span, status) ~ 1, dist = "weibull", data = strain_df)
w_90 <- summary(w_fit, fn = weibull_90, t=1)
w_50 <- summary(w_fit, fn = weibull_50, t=1)
w_10 <- summary(w_fit, fn = weibull_10, t=1)
strain_surv <- data.frame(block = unique(block_df$bio_rep),
strain = unique(block_df$strain)[s],
w_shape_est = w_fit[["res"]][1],
w_scale_est = w_fit[["res"]][2],
w_surv90_est = w_90[[1]][2],
w_surv50_est = w_50[[1]][2],
w_surv10_est = w_10[[1]][2])
strain_surv <- strain_surv %>%
dplyr::rename('w_surv90_est' = est, 'w_surv50_est' = est.1, 'w_surv10_est' = est.2)
strain_list[[s]] <- strain_surv
}
strain_df <- bind_rows(strain_list)
block_list[[b]] <- strain_df
}
h_df <- dplyr::bind_rows(block_list) %>%
dplyr::arrange(strain, block)
h_df_gather <- h_df %>%
tidyr::gather(trait, phenotype, -block, -strain)
weibull_par_plot_raw <- ggplot(h_df_gather) +
aes(x=strain, y=phenotype, color = block) +
geom_jitter(width = 0.1, height = 0.1) +
labs(x="Strain", y="Weibull Parameter Values") +
theme(legend.position = "right") +
theme_grey() +
facet_grid(trait ~ ., labeller = label_both)
weibull_par_plot_raw
w_scale_lm <- lme4::lmer(phenotype ~ 1 + (1|strain) + (1|block), data = h_df_gather%>%dplyr::filter(trait == "w_scale_est"))
summary(w_scale_lm)
w_shape_lm <- lme4::lmer(phenotype ~ 1 + (1|strain) + (1|block), data = h_df_gather%>%dplyr::filter(trait == "w_shape_est"))
summary(w_shape_lm)
w_surv10_lm <- lme4::lmer(phenotype ~ 1 + (1|strain) + (1|block), data = h_df_gather%>%dplyr::filter(trait == "w_surv10_est"))
summary(w_surv10_lm)
w_surv50_lm <- lme4::lmer(phenotype ~ 1 + (1|strain) + (1|block), data = h_df_gather%>%dplyr::filter(trait == "w_surv50_est"))
summary(w_surv50_lm)
w_surv90_lm <- lme4::lmer(phenotype ~ 1 + (1|strain) + (1|block), data = h_df_gather%>%dplyr::filter(trait == "w_scale_est"))
summary(w_surv90_lm)
